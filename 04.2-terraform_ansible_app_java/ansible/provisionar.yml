- hosts: all
  environment:
    DATABASE_URL: "{{ lookup('env', 'DATABASE_URL') }}"
    PASSWORK: "{{ lookup('env', 'PASSWORD') }}" 
    USER: "{{ lookup('env', 'USER') }}"

  handlers:
    - name: "restart nginx"
      service:
        name: nginx
        state: restarted
      become: yes

  tasks:
    - name: "Roda: sudo apt-get update"
      become: true
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400 #Um dia

    # - name: "Download e install packages-microsoft-prod"
    #   shell: "rm -rf packages-microsoft-prod.deb && wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb && sudo dpkg -i packages-microsoft-prod.deb || true"
  
    # - name: Adicionando dotnet-sdk no cache apt
    #   apt:
    #     name: dump
    #     update_cache: yes
    #   become: yes

    - name: "Instala pacotes"
      apt:
        name: "{{ item }}"
        state: latest
      become: yes # roda com sudo
      with_items:
        - default-jre
        - maven
        - mysql-server
        - nginx
        - python3-pycurl
        - python3-mysqldb
        
    - name: "clone projeto"
      ansible.builtin.git:
        repo: 'https://github.com/torneseumprogramador/spring-web-youtube'
        dest: /home/ubuntu/spring-web-youtube
        clone: yes
        update: yes

    # - name: Adicionar no bashrc
    #   lineinfile: dest=~/.bashrc line='export API_URL=https://localhost:5001' state=present

    # - name: Aplicar o bashrc
    #   shell: source ~/.bashrc
    #   args:
    #     executable: /bin/bash
    - name: Adicionar User no bashrc
      lineinfile: dest=~/.bashrc line='"{{ lookup('env', 'USER') }}"' state=present

    - name: Adicionar Pass no bashrc
      lineinfile: dest=~/.bashrc line='"{{ lookup('env', 'PASSWORD') }}"' state=present

    - name: Adicionar DB no bashrc
      lineinfile: dest=~/.bashrc line='export DATABASE_URL="{{ lookup('env', 'DATABASE_URL') }}"' state=present

    - name: Aplicar o bashrc
      shell: source ~/.bashrc
      args:
        executable: /bin/bash
  
    - name: "Lavanta servi√ßo do mysql"
      become: yes
      service:
        name: mysql
        state: started

    - name: "Criando senha root mysql"
      become: yes
      mysql_user:
        name: root
        host: localhost
        password: root
        priv: "*.*:ALL,GRANT"
  
    - name: "Cria o banco de dados MySQL"
      mysql_db:
        name: SpringWebYoutube
        login_user: root
        login_password: root
        state: present

    - name: "Copia dump mysql"
      copy:
        src: "sql/dump.sql"
        dest: "/home/ubuntu/"
      become: yes
      notify:
          - "restart nginx"

    - name: "Restore dump mysql"
      shell: "mysql -u root -p'root' SpringWebYoutube < /home/ubuntu/dump.sql"

    - name: "build with Maven"
      become: yes
      shell: "cd spring-web-youtube && mvn package"

    - name: "Start App"
      become: yes
      shell: "cd spring-web-youtube && nohup mvn spring-boot:start &"

    - name: "trocando nginx para VPS"
      copy:
        src: "nginx/defaul"
        dest: "/etc/nginx/sites-available/defaul"
      become: yes
      notify:
        - "restart nginx"

    # - name: "Criando migrations no banco de dados"
    #   shell: "dotnet tool install --global dotnet-ef && dotnet ef database update"

    # - name: "startando VPS"
    #   shell: "cd admin-cms-tornese-mentoria && nohup dotnet run &"

    # - name: "Trocando nginx para VPS"
    #   copy:
    #     src: "nginx/default"
    #     dest: "/etc/nginx/sites-available/default"
    #   become: yes
    #   notify:
    #     - "restart nginx"